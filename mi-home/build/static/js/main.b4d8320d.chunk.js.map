{"version":3,"sources":["Home.js","HomeDesign.js","Homes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","Home","home","onClick","Grid","container","direction","alignItems","justify","style","minHeight","item","xs","Card","CardActionArea","CardMedia","component","height","image","CardContent","Typography","gutterBottom","variant","price","color","address","HomeDesign","open","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","size","bedroom_count","bathroom_count","DialogActions","Button","href","property_url","target","Homes","homes","React","useState","setOpen","selectedHome","selectHome","numHomes","length","numPages","Math","ceil","activeStep","setActiveStep","homesOnPage","slice","className","map","i","key","MobileStepper","steps","position","nextButton","prevActiveStep","disabled","backButton","updateHm","a","fetch","res","json","App","homeList","updateHomes","useEffect","fetchHomes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4d8320d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 1000,\n  },\n});\n\nexport default function Home({home, onClick}) {\n     const classes = useStyles()\n     return (\n <Grid\n  container\n  direction=\"column\"\n  alignItems=\"center\"\n  justify=\"center\"\n  style={{ minHeight: '40vh' }}\n  >\n  <Grid item xs={5}>\n    <Card onClick={onClick} >\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"100\"\n          image=\"/photos/zillow111.jpeg\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\">{home.price}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {home.address}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card> \n  </Grid>\n  </Grid> \n)\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function HomeDesign({home, open, handleClose}) {\n\nif (!home.price){\n    return <div />\n}\n\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">   \n        {home.price} \n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n  This lovely home is located at {} {home.address}. \n  Its full size is {}{home.size} sqft, it has {}\n        {home.bedroom_count} bedrooms and \n        {} {home.bathroom_count} bathrooms. \n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Not Interested\n          </Button>\n          <a href = {home.property_url} target = \"_blank\">\n             <Button color=\"primary\" >\n             Interested\n             </Button>\n          </a>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import Home from './Home';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport HomeDesign from './HomeDesign'\n\n\nexport default function Homes({homes}) {\n//home design \nconst [open, setOpen] = React.useState(false);\nconst [selectedHome, selectHome] = React.useState({});\n\nconst handleClickOpen = () => {\n    setOpen(true);\n  };\n\nconst handleClose = () => {\n    setOpen(false);\n  };\n\n/////////////\n\nconst numHomes = homes.length;\nconst numPages = Math.ceil(numHomes / 5);\n\nconst [activeStep, setActiveStep] = React.useState(0);\nconst homesOnPage =homes.slice(activeStep * 5, (activeStep * 5) + 5);\n    \nfunction handleNext () {\n     setActiveStep(prevActiveStep => prevActiveStep + 1);\n};\n\nfunction handleBack () {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n};\n\n\n\n    return (\n        <div className=\"homes\">\n            <HomeDesign open={open} home = {selectedHome} handleClose={handleClose}/>\n            <Typography variant=\"h3\">\n                MY HOME\n            </Typography>\n\n            {\n                homesOnPage.map(\n                    (home,i)=><Home key={i} home={home} onClick={()=>{ \n                    handleClickOpen();    \n                    selectHome(home)\n                    \n                    }} />\n                )\n            }\n\n    <div>\n        Page {activeStep} of {numPages} \n    </div>\n    <MobileStepper\n      variant=\"progress\"\n      steps={numPages}\n      position=\"static\"\n      activeStep={activeStep}\n      nextButton={\n        <Button size=\"small\" onClick={handleNext} disabled={activeStep === 4}>\n          Next\n         <KeyboardArrowRight />\n        </Button>\n      }\n      backButton={\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 4}>\n         <KeyboardArrowLeft />\n          Back\n        </Button>\n      }\n    />\n    </div>\n    )\n}","import React from 'react';\nimport './App.css';\n\nimport Homes from './Homes';\n\nconst HOME_API_URL = 'http://localhost:3003/homes';\n\n\nasync function fetchHomes(updateHm) {\n  const res = await fetch(HOME_API_URL);\n  let json = await res.json();\n  \n  updateHm(json);\n}\n\n\nfunction App() {\n\nconst [homeList, updateHomes] = React.useState([]);\n\n React.useEffect(() => {\n    fetchHomes(updateHomes);\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Homes homes={homeList} />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n    \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n       \n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}